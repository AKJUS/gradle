// tag::custom-config[]
plugins {
    id("application")
}

// This configuration is used to declare dependencies only.
def instrumentedRuntimeDependencies = configurations.create("instrumentedRuntimeDependencies") {
    canBeConsumed = false
    canBeResolved = false
}

// This configuration is used to resolve the instrumented JAR files.
def instrumentedRuntime = configurations.create("instrumentedRuntime") {
    canBeConsumed = false
    canBeResolved = true

    // Extend from the dependency-only configuration
    extendsFrom instrumentedRuntimeDependencies

    // These attributes must match the producer's
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
        attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named(LibraryElements, "instrumented-jar"))
    }
}
// end::custom-config[]

// tag::dependency[]
dependencies {
    // Declare a project dependency on the producer's instrumented output
    add("instrumentedRuntimeDependencies", project(":producer"))
}
// end::dependency[]

// tag::task[]
tasks.register("runWithInstrumentation",JavaExec) {
    // Use the resolved instrumented classpath
    classpath = configurations["instrumentedRuntime"]
    mainClass.set("com.example.Main")
}
// end::task[]
